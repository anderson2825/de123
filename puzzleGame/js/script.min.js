function setCookie(e, t, i) {
    var s = new Date;
    s.setTime(s.getTime() + 24 * i * 60 * 60 * 1e3),
    document.cookie = e + "=" + escape(t) + "; expires=" + s.toGMTString()
}
function getCookie(e) {
    var t = document.cookie;
    if (t.length > 0)
        for (var i = t.split(";"), s = 0; s < i.length; s++) {
            var r = i[s].split("=");
            if (r[0].trim() == e)
                return unescape(r[1])
        }
}
function delCookie(e) {
    var t = new Date;
    t.setTime(t.getTime() - 1);
    var i = getCookie(e);
    null != i && (document.cookie = e + "=" + i + ";expires=" + t.toGMTString())
}
var app = new Vue({
    el: "#app",
    data: {
        items: [],
        todos:[
         {text:'囍帖街.mp3'},  
         {text:'沉默是金.mp3'}, 
         {text:'男儿志.mp3'}, 
         {text:'痴情司.mp3'}, 
         {text:'给你们.mp3'}
        ],
        index_m:0,
        border: !1,
        img: "a",
        timer: null,
        time: null,
        itemTimer: null,
        itemTime: null,
        timeTitle: "0/8",
        opacity: !1,
        aBtn: "重置",
        bestTime: "",
        mp3:false
    },
    computed: {
        mpath:function() {
           return   "puzzleGame/"+ this.todos[this.index_m].text;  
        }

    },
    methods: {
       playm:function() {
            if(this.mp3==false){
             this.$refs.maudio.pause();
        	   this.mp3=true;
        	 }else{
        	  this.$refs.maudio.play();
        	    this.mp3=false;
        	 }
        },
         playadd:function (index) {
          	var todolen= this.todos.length;
            this.index_m=(this.index_m+todolen)%todolen;
        },

        puzzle: function() {
            for (var e, t = [1, 2, 3, 4, 5, 6, 7, 8], i = t.length, s = (new Array,
            0); s < i; s++) {
                for (var r = parseInt(t.length * Math.random()), m = parseInt(t.length * Math.random()); r == m; )
                    m = parseInt(t.length * Math.random());
                e = t[r],
                t[r] = t[m],
                t[m] = e
            }
            return t.push(""),
            t
        },
        moveFn: function(e) {
            var t = this.items[e]
              , i = this.items[e - 1]
              , s = this.items[e + 1]
              , r = this.items[e - 3]
              , m = this.items[e + 3];
            "" === i && e % 3 ? (this.$set(this.items, e - 1, t),
            this.$set(this.items, e, "")) : "" === s && 2 !== e % 3 ? (this.$set(this.items, e + 1, t),
            this.$set(this.items, e, "")) : "" === r ? (this.$set(this.items, e - 3, t),
            this.$set(this.items, e, "")) : "" === m && (this.$set(this.items, e + 3, t),
            this.$set(this.items, e, "")),
            this.finsishFn()
        },
        finsishFn: function() {
            var e = this
              , t = this.items
              , i = [];
            if ("" === t[t.length - 1]) {
                t = t.slice(0, 8);
                for (var s = 0; s < t.length; s++)
                    t[s] === s + 1 ? i[s] = !0 : i[s] = !1;
                i.indexOf(!1) == -1 ? (e.border = !0,
                e.items[8] = 9,
                e.$refs.li[8].style.backgroundImage = "url(puzzleGame/" + e.img + "9.jpg)",
                imgArr.splice(imgIndex, 1),
                clearInterval(e.itemTimer),
                clearInterval(e.timer),
                imgArr.length > 0 ? (setCookie("imgArr", imgArr, 7),
                setCookie("time", parseInt(e.time), 7),
                e.timeTitle = 8 - imgArr.length + "/8",
                e.aBtn = "下一图片") : (delCookie("imgArr"),
                delCookie("time"),
                getCookie("bestTime") ? parseInt(e.time) < getCookie("bestTime") ? setCookie("bestTime", parseInt(e.time), 7) : setCookie("bestTime", getCookie("bestTime"), 7) : setCookie(" bestTime", parseInt(e.time), 7),
                e.aBtn = "游戏结束",
                e.timeTitle = "8/8",
                clearInterval(e.timer))) : this.border = !1
            }
        },
        styles: function(e) {
            var t = null;
            return t = "" !== e ? "background-image:url(puzzleGame/" + this.img + e + ".jpg)" : "background-image:url(puzzleGame/hui.jpg)"
        },
        reset: function() {
            if (!(imgArr.length <= 0)) {
                this.aBtn = "重置",
                this.border = !1;
                var e = this;
                imgIndex = Math.floor(Math.random() * imgArr.length),
                this.img = imgArr[imgIndex],
                this.items = this.puzzle();
                var t = new Date;
                clearInterval(e.itemTimer),
                clearInterval(this.timer),
                this.itemTimer = setInterval(function() {
                    var i = new Date;
                    e.itemTime = Math.floor((+i - +t) / 1e3),
                    e.opacity = e.itemTime > 50
                }, 100);
                var i = parseInt(e.time);
                this.timer = setInterval(function() {
                    var s = new Date;
                    e.time = Math.floor((+s - +t) / 1e3) + i + "秒"
                }, 100)
            }
        }
       
        /*mp3Fn: function() {
            this.mp3 = !this.mp3,
            console.log(this.$refs.audio),
            this.mp3 ? this.$refs.audio.play() : this.$refs.audio.pause()
        }*/
    },
    mounted: function() {
        var e = getCookie("imgArr");
        e && (e = e.split(",")),
        getCookie("bestTime") && (this.bestTime = "最佳成绩:" + getCookie("bestTime") + "秒"),
        imgArr = e || ["a", "b", "c", "d", "e", "f", "g", "h"],
        this.timeTitle = 8 - imgArr.length + "/8";
        var t = getCookie("time") ? +getCookie("time") : 0;
        this.reset();
        var i = this;
        clearInterval(this.timer);
        var s = new Date;
        this.timer = setInterval(function() {
            var e = new Date;
            i.time = Math.floor((+e - +s) / 1e3) + t + "秒"
        }, 100)
    }
});
